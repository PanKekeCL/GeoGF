{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebao\\\\OneDrive\\\\Documentos\\\\GitHub\\\\GeoGF\\\\api-geogf\\\\data\\\\template2_copy\\\\src\\\\pages\\\\minigames\\\\trivia_30.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  \"_id\": \"679bc54eb73000d63b65527f\",\n  \"nombre\": \"Trivia 30\",\n  \"descripcion\": \"\",\n  \"tipo\": \"Trivia\",\n  \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.25103056432454, -39.803365788006914]\n  },\n  \"paginas\": [{\n    \"enunciado\": \"Cuanto miden los Olivillos\",\n    \"imagen\": \"../../images/Trivia30_pagina_1.jpg\",\n    \"mezclarRespuestas\": false,\n    \"respuestas\": [{\n      \"texto\": \"10 metros\",\n      \"correcta\": false\n    }, {\n      \"texto\": \"20 metros\",\n      \"correcta\": true\n    }, {\n      \"texto\": \"30 metros\",\n      \"correcta\": false\n    }]\n  }]\n};\nconst Trivia = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answerVerified, setAnswerVerified] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (data.shufflePages) {\n      data.paginas.sort(() => Math.random() - 0.5);\n    }\n  }, []);\n  const handleSelection = index => {\n    setSelectedOption(index);\n  };\n  const verifyAnswer = () => {\n    if (selectedOption === null) return;\n    const isCorrect = data.paginas[currentPage].respuestas[selectedOption].correcto;\n    if (isCorrect) setCorrectAnswers(correctAnswers + 1);\n    setAnswerVerified(true);\n  };\n  const nextPage = () => {\n    setAnswerVerified(false);\n    setSelectedOption(null);\n    if (currentPage + 1 < data.paginas.length) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      const finalTime = Math.floor((Date.now() - startTime) / 1000);\n      alert(`Correct answers: ${correctAnswers}. Time: ${finalTime} seconds.`);\n      navigate(\"/map\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto bg-white shadow-lg rounded-lg\",\n    children: [currentPage === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: data.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-4\",\n        children: data.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        onClick: () => setCurrentPage(1),\n        children: \"Jugar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), currentPage > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: data.paginas[currentPage - 1].enunciado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), data.paginas[currentPage - 1].imagen && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.paginas[currentPage - 1].imagen,\n        alt: \"Imagen\",\n        className: \"mb-4 w-full h-auto rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2 mb-4\",\n        children: data.paginas[currentPage - 1].respuestas.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `p-2 rounded ${selectedOption === index ? \"bg-blue-300\" : \"bg-gray-200\"}`,\n          onClick: () => handleSelection(index),\n          disabled: answerVerified,\n          children: answer.texto\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), !answerVerified ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white px-4 py-2 rounded\",\n        onClick: verifyAnswer,\n        children: \"Comprobar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        onClick: nextPage,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this), answerVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: data.paginas[currentPage - 1].respuestas[selectedOption].correcto ? \"Correcto!\" : \"Incorrecto. Las respuestas correctas eran: \" + data.paginas[currentPage - 1].respuestas.find(a => a.correcto).texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Trivia, \"AyuzPW9YasHoofsDNaKGBg/EYKo=\", false, function () {\n  return [useNavigate];\n});\n_c = Trivia;\nexport default Trivia;\nvar _c;\n$RefreshReg$(_c, \"Trivia\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","data","Trivia","_s","currentPage","setCurrentPage","selectedOption","setSelectedOption","answerVerified","setAnswerVerified","correctAnswers","setCorrectAnswers","startTime","setStartTime","Date","now","navigate","shufflePages","paginas","sort","Math","random","handleSelection","index","verifyAnswer","isCorrect","respuestas","correcto","nextPage","length","finalTime","floor","alert","className","children","nombre","fileName","_jsxFileName","lineNumber","columnNumber","descripcion","onClick","enunciado","imagen","src","alt","map","answer","disabled","texto","find","a","_c","$RefreshReg$"],"sources":["C:/Users/sebao/OneDrive/Documentos/GitHub/GeoGF/api-geogf/data/template2_copy/src/pages/minigames/trivia_30.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst data = {\"_id\":\"679bc54eb73000d63b65527f\",\"nombre\":\"Trivia 30\",\"descripcion\":\"\",\"tipo\":\"Trivia\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[-73.25103056432454,-39.803365788006914]},\"paginas\":[{\"enunciado\":\"Cuanto miden los Olivillos\",\"imagen\":\"../../images/Trivia30_pagina_1.jpg\",\"mezclarRespuestas\":false,\"respuestas\":[{\"texto\":\"10 metros\",\"correcta\":false},{\"texto\":\"20 metros\",\"correcta\":true},{\"texto\":\"30 metros\",\"correcta\":false}]}]};\r\n\r\nconst Trivia = () => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [answerVerified, setAnswerVerified] = useState(false);\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [startTime, setStartTime] = useState(Date.now());\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (data.shufflePages) {\r\n            data.paginas.sort(() => Math.random() - 0.5);\r\n        }\r\n    }, []);\r\n\r\n    const handleSelection = (index) => {\r\n        setSelectedOption(index);\r\n    };\r\n\r\n    const verifyAnswer = () => {\r\n        if (selectedOption === null) return;\r\n        const isCorrect = data.paginas[currentPage].respuestas[selectedOption].correcto;\r\n        if (isCorrect) setCorrectAnswers(correctAnswers + 1);\r\n        setAnswerVerified(true);\r\n    };\r\n\r\n    const nextPage = () => {\r\n        setAnswerVerified(false);\r\n        setSelectedOption(null);\r\n        if (currentPage + 1 < data.paginas.length) {\r\n            setCurrentPage(currentPage + 1);\r\n        } else {\r\n            const finalTime = Math.floor((Date.now() - startTime) / 1000);\r\n            alert(`Correct answers: ${correctAnswers}. Time: ${finalTime} seconds.`);\r\n            navigate(\"/map\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-md mx-auto bg-white shadow-lg rounded-lg\">\r\n            {currentPage === 0 && (\r\n                <>\r\n                    <h1 className=\"text-2xl font-bold mb-4\">{data.nombre}</h1>\r\n                    <p className=\"text-gray-700 mb-4\">{data.descripcion}</p>\r\n                    <button\r\n                        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n                        onClick={() => setCurrentPage(1)}\r\n                    >\r\n                        Jugar\r\n                    </button>\r\n                </>\r\n            )}\r\n            {currentPage > 0 && (\r\n                <>\r\n                    <h2 className=\"text-xl font-semibold mb-2\">{data.paginas[currentPage - 1].enunciado}</h2>\r\n                    {data.paginas[currentPage - 1].imagen && (\r\n                        <img\r\n                            src={data.paginas[currentPage - 1].imagen}\r\n                            alt=\"Imagen\"\r\n                            className=\"mb-4 w-full h-auto rounded\"\r\n                        />\r\n                    )}\r\n                    <div className=\"grid grid-cols-2 gap-2 mb-4\">\r\n                        {data.paginas[currentPage - 1].respuestas.map((answer, index) => (\r\n                            <button\r\n                                key={index}\r\n                                className={`p-2 rounded ${\r\n                                    selectedOption === index\r\n                                        ? \"bg-blue-300\"\r\n                                        : \"bg-gray-200\"\r\n                                }`}\r\n                                onClick={() => handleSelection(index)}\r\n                                disabled={answerVerified}\r\n                            >\r\n                                {answer.texto}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                    {!answerVerified ? (\r\n                        <button\r\n                            className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n                            onClick={verifyAnswer}\r\n                        >\r\n                            Comprobar\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n                            onClick={nextPage}\r\n                        >\r\n                            Siguiente\r\n                        </button>\r\n                    )}\r\n                    {answerVerified && (\r\n                        <p className=\"mt-4\">\r\n                            {data.paginas[currentPage - 1].respuestas[selectedOption].correcto\r\n                                ? \"Correcto!\"\r\n                                : \"Incorrecto. Las respuestas correctas eran: \" +\r\n                                  data.paginas[currentPage - 1].respuestas.find((a) => a.correcto).texto}\r\n                        </p>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Trivia;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}